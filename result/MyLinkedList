C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe -Dvisualvm.id=87304355983900 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=56477:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin" -Dfile.encoding=UTF-8 -classpath F:\projects\NetcrakerHomeWork4\target\test-classes;F:\projects\NetcrakerHomeWork4\target\classes;C:\Users\Evgeny\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\Evgeny\.m2\repository\org\openjdk\jmh\jmh-core\1.33\jmh-core-1.33.jar;C:\Users\Evgeny\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\Evgeny\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\Evgeny\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.33\jmh-generator-annprocess-1.33.jar ru.netcraker.TestMyLinkedList
# JMH version: 1.33
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+10-LTS
# VM invoker: C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe
# VM options: -Dvisualvm.id=87304355983900 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=56477:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.netcraker.TestMyLinkedList.testAdd

# Run progress: 0,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 11891,470 ns/op
# Warmup Iteration   2: 11749,498 ns/op
# Warmup Iteration   3: 11073,025 ns/op
# Warmup Iteration   4: 10834,071 ns/op
# Warmup Iteration   5: 10863,053 ns/op
Iteration   1: 11165,755 ns/op
Iteration   2: 11201,141 ns/op
Iteration   3: 11056,950 ns/op
Iteration   4: 11458,926 ns/op
Iteration   5: 10972,912 ns/op


Result "ru.netcraker.TestMyLinkedList.testAdd":
  11171,137 ±(99.9%) 710,241 ns/op [Average]
  (min, avg, max) = (10972,912, 11171,137, 11458,926), stdev = 184,447
  CI (99.9%): [10460,895, 11881,378] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+10-LTS
# VM invoker: C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe
# VM options: -Dvisualvm.id=87304355983900 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=56477:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.netcraker.TestMyLinkedList.testDelete

# Run progress: 33,33% complete, ETA 00:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 535491,250 ns/op
# Warmup Iteration   2: 507223,787 ns/op
# Warmup Iteration   3: 507664,330 ns/op
# Warmup Iteration   4: 506545,792 ns/op
# Warmup Iteration   5: 507325,462 ns/op
Iteration   1: 506974,653 ns/op
Iteration   2: 506621,459 ns/op
Iteration   3: 507000,010 ns/op
Iteration   4: 515881,048 ns/op
Iteration   5: 512423,402 ns/op


Result "ru.netcraker.TestMyLinkedList.testDelete":
  509780,114 ±(99.9%) 16083,649 ns/op [Average]
  (min, avg, max) = (506621,459, 509780,114, 515881,048), stdev = 4176,872
  CI (99.9%): [493696,466, 525863,763] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+10-LTS
# VM invoker: C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe
# VM options: -Dvisualvm.id=87304355983900 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=56477:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.netcraker.TestMyLinkedList.testUpdate

# Run progress: 66,67% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 911800,865 ns/op
# Warmup Iteration   2: 869475,524 ns/op
# Warmup Iteration   3: 867555,042 ns/op
# Warmup Iteration   4: 862177,921 ns/op
# Warmup Iteration   5: 912790,821 ns/op
Iteration   1: 921863,110 ns/op
Iteration   2: 874848,233 ns/op
Iteration   3: 870646,820 ns/op
Iteration   4: 870433,177 ns/op
Iteration   5: 870484,092 ns/op


Result "ru.netcraker.TestMyLinkedList.testUpdate":
  881655,086 ±(99.9%) 86851,500 ns/op [Average]
  (min, avg, max) = (870433,177, 881655,086, 921863,110), stdev = 22555,059
  CI (99.9%): [794803,586, 968506,587] (assumes normal distribution)


# Run complete. Total time: 00:05:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                    Mode  Cnt       Score       Error  Units
TestMyLinkedList.testAdd     avgt    5   11171,137 ±   710,241  ns/op
TestMyLinkedList.testDelete  avgt    5  509780,114 ± 16083,649  ns/op
TestMyLinkedList.testUpdate  avgt    5  881655,086 ± 86851,500  ns/op

Process finished with exit code 0
