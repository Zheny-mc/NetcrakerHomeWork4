C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe -Dvisualvm.id=94539720391000 "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=59060:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin" -Dfile.encoding=UTF-8 -classpath F:\projects\NetcrakerHomeWork4\target\test-classes;F:\projects\NetcrakerHomeWork4\target\classes;C:\Users\Evgeny\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\Evgeny\.m2\repository\org\openjdk\jmh\jmh-core\1.33\jmh-core-1.33.jar;C:\Users\Evgeny\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\Evgeny\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\Evgeny\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.33\jmh-generator-annprocess-1.33.jar ru.netcraker.task2.c.TestTreeMap
# JMH version: 1.33
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+10-LTS
# VM invoker: C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe
# VM options: -Dvisualvm.id=94539720391000 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=59060:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.netcraker.task2.c.TestTreeMap.sourceTestAdd

# Run progress: 0,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 92256,180 ns/op
# Warmup Iteration   2: 93401,914 ns/op
# Warmup Iteration   3: 93590,431 ns/op
# Warmup Iteration   4: 93837,936 ns/op
# Warmup Iteration   5: 93957,921 ns/op
Iteration   1: 93785,309 ns/op
Iteration   2: 93716,502 ns/op
Iteration   3: 94009,553 ns/op
Iteration   4: 93817,874 ns/op
Iteration   5: 93371,099 ns/op


Result "ru.netcraker.task2.c.TestTreeMap.sourceTestAdd":
  93740,067 ±(99.9%) 897,738 ns/op [Average]
  (min, avg, max) = (93371,099, 93740,067, 94009,553), stdev = 233,140
  CI (99.9%): [92842,330, 94637,805] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+10-LTS
# VM invoker: C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe
# VM options: -Dvisualvm.id=94539720391000 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=59060:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.netcraker.task2.c.TestTreeMap.sourceTestContainsKey

# Run progress: 33,33% complete, ETA 00:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 135267,985 ns/op
# Warmup Iteration   2: 133595,709 ns/op
# Warmup Iteration   3: 135692,093 ns/op
# Warmup Iteration   4: 136090,750 ns/op
# Warmup Iteration   5: 136500,551 ns/op
Iteration   1: 136100,818 ns/op
Iteration   2: 135969,150 ns/op
Iteration   3: 136254,681 ns/op
Iteration   4: 136520,186 ns/op
Iteration   5: 135370,014 ns/op


Result "ru.netcraker.task2.c.TestTreeMap.sourceTestContainsKey":
  136042,970 ±(99.9%) 1649,746 ns/op [Average]
  (min, avg, max) = (135370,014, 136042,970, 136520,186), stdev = 428,434
  CI (99.9%): [134393,223, 137692,716] (assumes normal distribution)


# JMH version: 1.33
# VM version: JDK 11.0.14.1, OpenJDK 64-Bit Server VM, 11.0.14.1+10-LTS
# VM invoker: C:\Users\Evgeny\.jdks\corretto-11.0.14.1\bin\java.exe
# VM options: -Dvisualvm.id=94539720391000 -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\lib\idea_rt.jar=59060:C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.1\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.netcraker.task2.c.TestTreeMap.sourceTestDelete

# Run progress: 66,67% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 133921,447 ns/op
# Warmup Iteration   2: 137542,635 ns/op
# Warmup Iteration   3: 129204,117 ns/op
# Warmup Iteration   4: 128933,443 ns/op
# Warmup Iteration   5: 129157,137 ns/op
Iteration   1: 129004,687 ns/op
Iteration   2: 129029,658 ns/op
Iteration   3: 130332,903 ns/op
Iteration   4: 129992,928 ns/op
Iteration   5: 129048,898 ns/op


Result "ru.netcraker.task2.c.TestTreeMap.sourceTestDelete":
  129481,815 ±(99.9%) 2439,240 ns/op [Average]
  (min, avg, max) = (129004,687, 129481,815, 130332,903), stdev = 633,463
  CI (99.9%): [127042,574, 131921,055] (assumes normal distribution)


# Run complete. Total time: 00:05:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          Mode  Cnt       Score      Error  Units
TestTreeMap.sourceTestAdd          avgt    5   93740,067 ±  897,738  ns/op
TestTreeMap.sourceTestContainsKey  avgt    5  136042,970 ± 1649,746  ns/op
TestTreeMap.sourceTestDelete       avgt    5  129481,815 ± 2439,240  ns/op

Process finished with exit code 0
